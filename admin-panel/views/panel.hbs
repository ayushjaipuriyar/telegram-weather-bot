<!-- panel.hbs -->

<html>
  <head>
    <title>Panel</title>
    <style>

      @import
      url("https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700");
      @import url("https://fonts.googleapis.com/css?family=Archivo+Black"); body
      { box-sizing: border-box; background-color: #fbc531; font-family:
      "Montserrat", sans-serif; margin: 0; } .table-title { margin: 50px auto;
      max-width: 600px; text-transform: uppercase; text-align: center;
      font-family: "Archivo Black", sans-serif; font-size: 2.5em; color: #222; }
      .employees-table { margin: 10% auto; max-width: 700px; width: 100%;
      border-collapse: collapse; text-align: left; border-radius: 8px; overflow:
      hidden; box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1); } .employees-table-head
      th { padding: 15px 15px; text-transform: uppercase; font-size: 0.9em;
      font-weight: 700; color: #f1f1f1; background: #222; }
      .employees-table-body tr { background: #fff; transition: ease-in-out 0.3s;
      } .employees-table-body tr:nth-child(even) { background: #fafafa; }
      .employees-table-body tr:hover { background: #222; color: #f1f1f1; }
      .employees-table-body td { padding: 15px 15px; font-size: 0.9em;
      font-weight: 600; cursor: pointer; } .employees-table-body tr i { color:
      transparent; transition: ease-in-out 0.3s; } .employees-table-body
      tr:hover i { color: #e74c3c; } .employees-table-body tr button:hover {
      color: #c0392b; } header { width: 100%; padding-top: 50px; background:
      #000; transition: 0.7s all; z-index: 100; } body.header-fixed header {
      position: fixed; top: 0; right: 0; padding-top: 0; width: 100%; z-index:
      2; } li { list-style: none; } nav { overflow: hidden; } nav ul { float:
      right; } nav li { display: inline; float: left; } nav a { display:
      inline-block; color: #fff; text-decoration: none; padding: 25px;
      transition: 0.3s all; } nav a:hover { background: red; } .logo { float:
      left; color: #fff; font-size: 50px; } button { color:#fff; relative;
      z-index: 1; display: block; padding: 10px; margin: 2px; background-color:
      #fbc531; border-radius: 30px; border:0; text-align: center;
      text-decoration: none; text-transform: uppercase; color: black; overflow:
      hidden; &::before { content: ''; position: absolute; top: 0; left: 0;
      right: 0; z-index: -1; display: block; width: 10px; height: 10px; margin:
      20px auto 0; background-color: white; border-radius: 10px; opacity: 0; }
      &:hover { &::before { transform: scale(30); transition: .5s; animation:
      mymove .5s; } } } @keyframes mymove { 0% {opacity: .1;} 50% {opacity: .5;}
      100% {opacity: 0;} } background-color: #f44336 !important; color: #fff
      !important; }

    </style>
  </head>
  <body>
    <header id='topnav'>
      <div class='inner'>
        <div class='logo'>Admin Panel</div>
        <nav role='navigation'>
          <ul>
            <li>
              <li><a href='/users/panel'>Users</a></li>
            </li>
            <li><a href='/clients/panel'>Clients</a></li>
            <li>
              <a href='/auth/signup' class='button'>Signup</a>
            </li>
          </ul>
        </nav>
      </div>
    </header>
    <table class='employees-table' id='userTableBody'>
      <thead class='employees-table-head'>
        <tr>
          <th>ID</th>
          <th>Username</th>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Actions</th>
        </tr>

      </thead>
      <tbody class='employees-table-body'>
        {{#each users}}
          <tr class="{{#if blocked}}blocked-user{{/if}}">
            <td>{{id}}</td>
            <td>{{username}}</td>
            <td>{{first_name}}</td>
            <td>{{last_name}}</td>
            <td>
              {{#if blocked}}
                <button class='unblock-btn' onclick="toggleUserStatus('{{id}}', false)">
                  <i class='material-icons'></i>
                  Unblock
                </button>
              {{else}}
                <button class='block-btn' onclick="toggleUserStatus('{{id}}', true)">
                  <i class='material-icons'></i>
                  Block
                </button>
              {{/if}}
              <button class='delete-btn' onclick="deleteUser('{{id}}')">
                <i class='material-icons'></i>
                Delete
              </button>

            </td>
          </tr>
        {{/each}}
      </tbody>
    </table>
    <script
      src='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js'
    ></script>
    <script>
 async function toggleUserStatus(userId, isBlocked) {
        try {
          const endpoint = isBlocked ? `/users/${userId}/blocked` : `/users/${userId}/unblocked`;
    const response = await fetch(endpoint,{
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ blocked: isBlocked }),
          });

          if (response.ok) {
            console.log(`User ${userId} status updated successfully`);
            // Update the table body
            const userTableBody = document.querySelector('.employees-table-body');
            const updatedUsersResponse = await fetch('/users');
            
            if (updatedUsersResponse.ok) {
              const updatedUsers = await updatedUsersResponse.json();
              userTableBody.innerHTML = ''; // Clear existing rows
              updatedUsers.forEach(user => {
                const row = document.createElement('tr');
                row.className = user.blocked ? 'blocked-user' : '';
                row.innerHTML = `
                  <td>${user.id}</td>
                  <td>${user.username}</td>
                  <td>${user.first_name}</td>
                  <td>${user.last_name}</td>
                  <td>
                    ${user.blocked
                      ? `<button class='unblock-btn' onclick="toggleUserStatus('${user.id}', false)">
                          <i class='material-icons'></i>
                          Unblock
                        </button>`
                      : `<button class='block-btn' onclick="toggleUserStatus('${user.id}', true)">
                          <i class='material-icons'></i>
                          Block
                        </button>`
                    }
                    <button class='delete-btn' onclick="deleteUser('${user.id}')">
                      <i class='material-icons'></i>
                      Delete
                    </button>
                  </td>
                `;
                userTableBody.appendChild(row);
              });
            } else {
              console.error('Failed to fetch updated user data');
            }
          } else {
            console.error(`Failed to update user ${userId} status`);
          }
        } catch (error) {
          console.error(`Error updating user ${userId} status:`, error);
        }
      }

      // Function to delete a user
      async function deleteUser(userId) {
        try {
          const response = await fetch(`/users/${userId}`, {
            method: 'DELETE',
          });

          if (response.ok) {
            console.log(`User ${userId} deleted successfully`);
            const userTableBody = document.querySelector('.employees-table-body');
            const updatedUsersResponse = await fetch('/users');
            
            if (updatedUsersResponse.ok) {
              const updatedUsers = await updatedUsersResponse.json();
              userTableBody.innerHTML = ''; // Clear existing rows
              updatedUsers.forEach(user => {
                const row = document.createElement('tr');
                row.className = user.blocked ? 'blocked-user' : '';
                row.innerHTML = `
                  <td>${user.id}</td>
                  <td>${user.username}</td>
                  <td>${user.first_name}</td>
                  <td>${user.last_name}</td>
                  <td>
                    ${user.blocked
                      ? `<button class='unblock-btn' onclick="toggleUserStatus('${user.id}', false)">
                          <i class='material-icons'></i>
                          Unblock
                        </button>`
                      : `<button class='block-btn' onclick="toggleUserStatus('${user.id}', true)">
                          <i class='material-icons'></i>
                          Block
                        </button>`
                    }
                    <button class='delete-btn' onclick="deleteUser('${user.id}')">
                      <i class='material-icons'></i>
                      Delete
                    </button>
                  </td>
                `;
                userTableBody.appendChild(row);
              });
            } else {
              console.error('Failed to fetch updated user data');
            }
          } else {
            console.error(`Failed to delete user ${userId}`);
          }
        } catch (error) {
          console.error(`Error deleting user ${userId}:`, error);
        }
      }
    </script>
  </body>
</html>